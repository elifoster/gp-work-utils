#!/usr/bin/env ruby
# encoding: utf-8

# Script that allows you to open 1 page on all wikis in the wikis.txt file
# Arguments:
#   * 1st parameter must be the page, with no spaces (use _)
#     * If it is Special:RecentChanges, then
#   * --all: Open all wikis, even if there is an error
#   * --no-empty: Skip wikis which return a 404
#   * --no-redirect: Skip wikis whose page is a redirect (not a HTTPRedirection, but a #REDIRECT wiki page)

require 'dotenv'
require 'net/http'
require 'nokogiri'
require_relative '../lib/wiki_manager'

Dotenv.load

# Helper method for checking if the URL should be opened with redirection following
# @yieldparam The response when it succeeds
# @yieldreturn Whether, given the body, it should be opened
# @param url The URL string to check
# @return Whether this should be opened
def should_open?(url, &block)
  resp = Net::HTTP.get_response(URI(url))
  case resp
  when Net::HTTPRedirection
    location = resp['location']
    puts "Redirecting #{url} to #{location}"
    should_open?(location) { |resp1| block.call(resp1) }
  when Net::HTTPSuccess
    block.call(resp)
  when Net::HTTPNotFound
    false
  else
    p url
    p resp.code
    false
  end
end

WikiManager.open(ARGV[0]) do |url|
  next true if ARGV.include?('--all')

  should_open?(url) do |resp|
    if ARGV[0].downcase.eql?('special:recentchanges')
      # The date headers are level 4 headers, and are the only ones displayed in the RecentChanges
      if resp.body.include?('<h4>')
        # If the only a.mw-userlink is for the bot administrator, skip this wiki.
        doc = Nokogiri::HTML(resp.body)
        userlinks = doc.css('a.mw-userlink')
        break !userlinks.detect { |a| a.inner_text != ENV['BOT_ADMINISTRATOR']}.nil?
      else
        break false
      end
    elsif ARGV[0].downcase.eql?('special:wikipoints/monthly')
      break false if resp.body.include?('No results found')
    else
      if ARGV.include?('--no-empty')
        break false if resp.code.eql?('404')
      end
      if ARGV.include?('--no-redirect')
        # In the page script, there is a line which sets all the mw.config values. If the page is a redirect, then
        # this response will be for the page *redirected to*, and will, as such, include the wgRedirectedFrom var.
        break false if resp.body.include?('wgRedirectedFrom')
      end
    end
    break true
  end
end
